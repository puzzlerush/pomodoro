{"version":3,"sources":["components/Countdown.js","components/TimeSetter.js","components/Clock.js","App.js","index.js"],"names":["formatTime","seconds","hours","Math","floor","minutes","substr","Countdown","props","state","timeRemaining","sessionDuration","lastUpdateTime","Date","now","interval","onBreak","inCycle","update","bind","start","stop","reset","setState","prevProps","prevState","snapshot","this","dt","document","getElementById","play","breakDuration","setInterval","clearInterval","className","onClick","id","src","React","Component","TimeSetter","name","clickInc","value","clickDec","BreakSetter","SessionSetter","Clock","breakLength","sessionLength","incrementBreak","decrementBreak","incrementSession","decrementSession","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c6913cf9.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Countdown.css';\r\n\r\nfunction formatTime(seconds) {\r\n    const hours = Math.floor(seconds/3600);\r\n    seconds = seconds % 3600;\r\n    const minutes = Math.floor(seconds/60);\r\n    seconds = seconds % 60;\r\n    return ('00' + hours).substr(-2) + ':' + \r\n           ('00' + minutes).substr(-2) + ':' + \r\n           ('00' + seconds).substr(-2);\r\n    \r\n}\r\n\r\nclass Countdown extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            timeRemaining: this.props.sessionDuration,\r\n            lastUpdateTime: Date.now(),\r\n            interval: null,\r\n            onBreak: false,\r\n            inCycle: false\r\n        }\r\n        this.update = this.update.bind(this);\r\n        this.start = this.start.bind(this);\r\n        this.stop = this.stop.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n        this.setState = this.setState.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevState.timeRemaining != this.props.sessionDuration && !this.state.inCycle) {\r\n            this.setState({timeRemaining: this.props.sessionDuration});\r\n        }\r\n    }\r\n\r\n    update() {\r\n        const now = Date.now();\r\n        const dt = now - this.state.lastUpdateTime;\r\n        this.setState((state, props) => ({\r\n            timeRemaining: state.timeRemaining - dt,\r\n            lastUpdateTime: now,\r\n        }));\r\n        if (this.state.timeRemaining <= 0) {\r\n            const alarm = document.getElementById('audio-element');\r\n            alarm.play();\r\n            this.setState((state, props) => ({\r\n                timeRemaining: state.onBreak ? this.props.sessionDuration : this.props.breakDuration,\r\n                onBreak: !state.onBreak,\r\n\r\n            }));\r\n        }\r\n    }\r\n\r\n    start() {\r\n        if (!this.state.interval) {\r\n            this.setState({\r\n                lastUpdateTime: Date.now(),\r\n                interval: setInterval(this.update, 1),\r\n                inCycle: true\r\n            });\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(this.state.interval);\r\n        this.setState({interval: null});\r\n    }\r\n\r\n    reset() {\r\n        this.stop();\r\n        this.setState({\r\n            timeRemaining: this.props.sessionDuration,\r\n            interval: null,\r\n            onBreak: false,\r\n            inCycle: false\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const seconds = Math.floor(this.state.timeRemaining / 1000);\r\n        return (\r\n            <div className=\"countdown\">\r\n                {this.state.onBreak ? \r\n                    <p className=\"break\">break</p> : \r\n                    <p className=\"session\">session</p>\r\n                }\r\n                \r\n                <div className=\"time\">{formatTime(seconds)}</div>\r\n\r\n                {this.state.interval ? \r\n                    <div className=\"timecontrol\" onClick={() => {this.stop()}}>Stop</div> :\r\n                    <div className=\"timecontrol\" onClick={() => this.start()}>Start</div>\r\n                }\r\n                \r\n                <div className=\"timecontrol\" onClick={() => {this.reset()}}>Reset</div>\r\n                <audio id=\"audio-element\">\r\n                    <source src=\"https://assets.coderrocketfuel.com/pomodoro-times-up.mp3\"></source>\r\n                </audio>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Countdown;","import React from 'react';\r\nimport './TimeSetter.css';\r\n\r\nclass TimeSetter extends React.Component {\r\n    constructor(props, name) {\r\n        super(props);\r\n        this.name = name;\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"timeSetter\">\r\n                <div>{this.name}</div>\r\n                <div className=\"incdec\" onClick={this.props.clickInc}>+</div>\r\n                <div>{this.props.value}</div>\r\n                <div className=\"incdec\" onClick={this.props.clickDec}>-</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass BreakSetter extends TimeSetter {\r\n    constructor(props) {\r\n        super(props, 'break');\r\n\r\n    }\r\n\r\n}\r\n\r\nclass SessionSetter extends TimeSetter {\r\n    constructor(props) {\r\n        super(props, 'session');\r\n\r\n    }\r\n}\r\n\r\nexport {BreakSetter, SessionSetter};","import React from 'react';\r\nimport Countdown from './Countdown';\r\nimport {BreakSetter, SessionSetter} from './TimeSetter';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            breakLength: 5,\r\n            sessionLength: 25,\r\n        };\r\n        this.incrementBreak = this.incrementBreak.bind(this);\r\n        this.decrementBreak = this.decrementBreak.bind(this);\r\n        this.incrementSession = this.incrementSession.bind(this);\r\n        this.decrementSession = this.decrementSession.bind(this);\r\n    }\r\n\r\n    incrementBreak() {\r\n        this.setState((state, props) => ({\r\n            breakLength: state.breakLength + 1\r\n        }));\r\n    }\r\n    \r\n    decrementBreak() {\r\n        if (this.state.breakLength <= 1) {\r\n            return;\r\n        }\r\n        this.setState((state, props) => ({\r\n            breakLength: state.breakLength - 1\r\n        }));\r\n    }\r\n    \r\n    incrementSession() {\r\n        this.setState((state, props) => ({\r\n            sessionLength: state.sessionLength + 1\r\n        }));\r\n    }\r\n\r\n    decrementSession() {\r\n        if (this.state.sessionLength <= 1) {\r\n            return;\r\n        }\r\n        this.setState((state, props) => ({\r\n            sessionLength: state.sessionLength - 1\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Countdown \r\n                    sessionDuration={this.state.sessionLength * 60 * 1000} \r\n                    breakDuration={this.state.breakLength * 60 * 1000}\r\n                />\r\n                <BreakSetter\r\n                    value={this.state.breakLength} \r\n                    clickInc={this.incrementBreak} \r\n                    clickDec={this.decrementBreak}\r\n                />\r\n                <SessionSetter\r\n                    value={this.state.sessionLength} \r\n                    clickInc={this.incrementSession} \r\n                    clickDec={this.decrementSession}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clock;","import './App.css';\nimport Clock from \"./components/Clock\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p id=\"title\">pomodoro clock</p>\n        <Clock />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}